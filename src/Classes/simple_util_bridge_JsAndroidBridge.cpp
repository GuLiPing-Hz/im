/* DO NOT EDIT THIS FILE - it is machine generated */
#include "simple_util_bridge_JsAndroidBridge.h"
#include "wrap/wrap_config.h"

#ifdef COCOS_PROJECT
#include "platform/CCPlatformConfig.h"
#include "cocos2d.h"
#include "platform/android/jni/JniHelper.h"
#include "bridge/SimpleJsBridge.h"
#else
#include "jni/JniHelper.h"
#include "bridge/SimpleBridgeAndroid.h"
#endif

/*
* Class:     simple_util_bridge_JsAndroidBridge
* Method:    setNativeContext
* Signature: (Landroid/content/Context;)V
*/
void JNICALL Java_simple_util_bridge_JsAndroidBridge_setNativeContext
        (JNIEnv *env, jclass, jobject obj) {
	Wrap::JniHelper::setClassLoaderFrom(env, obj);
}

/*
* Class:     simple_util_bridge_JsAndroidBridge
* Method:    callCppFromNative
* Signature: (Ljava/lang/String;)I
*/
jint JNICALL Java_simple_util_bridge_JsAndroidBridge_callCppFromNative
        (JNIEnv *env, jclass, jstring str) {
    LOGD("%s", __FUNCTION__);
    std::string param = Wrap::JniHelper::jstring2string(env, str);
    LOGD("%s param=%s\n", __FUNCTION__, param.c_str());
#ifdef COCOS_PROJECT
    SimpleJsBridge::getInstance()->callJsFromNative(param);
    return 0;
#else
    return SimpleBridgeAndroid::getInstance()->callByNative(param);
#endif
}

/*
 * Class:     simple_util_bridge_JsAndroidBridge
 * Method:    getStringFromCpp
 * Signature: ()Ljava/lang/String;
 */
jstring JNICALL Java_simple_util_bridge_JsAndroidBridge_getStringFromCpp
        (JNIEnv *env, jclass) {
    std::string hello = "Hello from C++! Hello World!";
    return env->NewStringUTF(hello.c_str());
}


